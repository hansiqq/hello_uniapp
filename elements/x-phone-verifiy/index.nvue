<template>
  <view class="verification-box">
    <text class="verification-box-label">{{ label }}</text>
    <input class="verification-box-input" v-model="viewModel" placeholder="请输入验证码" :style="{ width: screenWidth - 225 + 'px' }" />
    <text class="verification-box-text" @click="verification" v-if="sendAuthCode">获取验证码</text>
    <text class="verification-box-text" v-if="!sendAuthCode">{{ countdownTime }}重新获取</text>
  </view>
</template>
<script>
import ala from '@/service/ala'
export default {
  model: {
    prop: 'dataModel',
    event: 'change'
  },
  data() {
    return {
      phone: '',
      sendAuthCode: true,
      countdownTime: '',
      screenWidth: '',
      viewModel: ''
    }
  },
  props: {
    dataModel: {},
    label: {},
    currentModel: {},
    column: {}
  },
  mounted() {
    this.init()
  },
  methods: {
    init() {
      this.screenWidth = ala.screenWidth()
      if (this.dataModel) this.viewModel = this.dataModel
    },
    async verification() {
      if (!this.sendAuthCode) {
        return
      }
      this.sendAuthCode = false
      var mark = null
      if (this.column !== undefined && this.column !== null) {
        mark = this.column.mark
      }
      if (!mark) {
        mark = 'mobile'
      }
      this.phone = this.currentModel[mark]
      var myreg = /^[1][3,4,5,6,7,8,9][0-9]{9}$/
      if (myreg.test(this.phone)) {
        let parament = {
          mobile: this.phone
        }
        var response = await ala.httpPost('Api/Sms/SendVerifiyCode', parament)
        if (response) {
          this.countdownTime = 60
          var vueThis = this
          var authTimetimer = setInterval(() => {
            vueThis.countdownTime--
            if (vueThis.countdownTime <= 0) {
              clearInterval(authTimetimer)
              this.sendAuthCode = true
            }
          }, 1000)
        } else {
          uni.showToast({
            icon: 'none',
            title: response.message
          })
          this.sendAuthCode = true
        }
      } else {
        uni.showToast({
          icon: 'none',
          title: '手机号不正确'
        })
        this.sendAuthCode = true
      }
    }
  },
  watch: {
    viewModel: {
      deep: true,
      handler(val) {
        this.$emit('change', this.viewModel)
      }
    }
  }
}
</script>

<style lang="scss" scoped>
	.verification-box{
		height: 40px;
		flex-direction: row;
		align-items: center;
		&-label{
			width: 105px;
			font-size: 14px;
		}
		&-input{
			font-size: 14px;
		}
		&-text {
		    height: 36px;
		    line-height: 36px;
		    justify-content: center;
		    background-color: $gl-brand;
		    color: #fff;
		    border-radius: 3px;
		    font-size: 12px;
		    padding: 0px 8px;
		  }
	}
</style>

