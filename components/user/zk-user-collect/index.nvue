<template>
  <view class="zk-user-collect" v-if="collectModel" :style="{ width: screenWidth + 'px', height: screenHeight + 'px' }">
    <view class="zk-user-collect-ul" v-if="collectModel.length > 0">
      <view class="zk-user-collect-list" :style="{ width: screenWidth - 20 + 'px' }" @click="linkTo(item)" v-for="(item, index) in collectModel" :key="index">
        <image :src="item.image" class="zk-user-collect-list-image" />
        <view class="zk-user-collect-list-right" :style="{ width: screenWidth - 130 + 'px' }">
          <view>
            <text class="zk-user-collect-list-right-title">{{ item.name }}</text>
            <text class="zk-user-collect-list-right-intro">{{ item.entityId }}人收藏</text>
          </view>
          <view class="zk-user-collect-list-right-bottom">
            <text class="zk-user-collect-list-right-bottom-left">￥</text>
            <text class="zk-user-collect-list-right-bottom-right">100.00</text>
          </view>
        </view>
      </view>
    </view>
    <view class="noData-image" v-else>
      <image src="http://ui.5ug.com/static/static/nodata.webp" :style="{ width: screenWidth + 'px', height: screenHeight + 'px' }" />
    </view>
  </view>
</template>

<script>
import ala from '@/service/ala'
export default {
  data() {
    return {
      collectModel: null,
      screenWidth: 0,
      screenHeight: 0
    }
  },
  mounted() {
    this.init()
  },
  methods: {
    async init() {
      this.screenHeight = ala.screenHeight()
      this.screenWidth = ala.screenWidth()
      var para = {
        userId: ala.userId()
      }
      var response = await ala.httpGet('api/Favorite/List', para)
      if (response) {
        this.collectModel = response
      }
    },
    linkTo(item) {
      ala.to(`/product/show?id='${item.entityId}`)
    }
  }
}
</script>

<style lang="scss" scoped>
.zk-user-collect {
  background-color: #f2f2f2;
  &-ul {
    padding: 5px 10px;
  }
  &-list {
    padding: 10px;
    background-color: #ffffff;
    margin: 5px 0;
    border-radius: 3px;
    flex-direction: row;
    justify-content: space-between;
    &-image {
      height: 90px;
      width: 90px;
      background-color: #007aff;
    }
    &-right {
      height: 90px;
      padding-left: 10px;
      justify-content: space-between;
      &-title {
        font-size: 14px;
        overflow: hidden;
        text-overflow: ellipsis;
        /* #ifndef APP-NVUE */
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        /* #endif */
        /* #ifdef APP-NVUE */
        lines: 2;
        /* #endif */
      }
      &-intro {
        margin-top: 5px;
        font-size: 12px;
        color: #666666;
      }
      &-bottom {
        flex-direction: row;
        align-items: center;
        &-left {
          font-size: 12px;
          color: #cd4418;
        }
        &-right {
          font-size: 14px;
          color: #cd4418;
        }
      }
    }
  }
}
</style>

<style lang="scss" scoped>
// #ifndef APP-PLUS
// app-plus-css
// @import './var.scss';
// app-plus-css
// #endif
</style>
